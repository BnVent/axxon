<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
  <head>
    <title>Axxón 73 - SECCION: - Una mirada a la realidad</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="stylesheet.css" type="text/css" rel="stylesheet"/>
<link href="page_styles.css" type="text/css" rel="stylesheet"/>
</head>
  <body class="calibre">

<div id="main" class="calibre1">
<h1 class="calibre7">Una mirada a la realidad</h1>
<p class="calibre5"><b class="calibre4">Eduardo J. Carletti</b></p><p class="calibre5"></p>
<div class="document">
<!-- # :maxLineLen=120:folding=explicit:mode=rest:wrap=soft:collapseFolds=1:encoding=windows-1252: -->
<div class="resumen1">
<p class="calibre21">En este número, y para variar un poco, Una Mirada… se
compone de trabajos de firmas invitadas. Espero que no
extrañen demasiado las habituales RESEÑANDO EL CIBERESPACIO y
CIENCIA FICCION Y SOCIEDAD. (Es más… si no las extrañan
cuéntenme, así me ahorro trabajo en el próximo número.)</p>
<p class="calibre21">Y antes de empezar, va de yapa un momento de sutil humor:</p>
</div>
<div class="line" id="instrucciones-de-uso">
<h2 class="indiceautor">INSTRUCCIONES DE USO</h2>
<p class="calibre5">Ricardo M. Forno</p>
<p class="calibre5">Para utilizar el aparato, previamente asegúrese de que el
mismo se encuentre en estado de usarlo. Caso contrario,
diríjase a su representante más próximo para que él efectúe
los reemplazos o reparaciones necesarios, a un costo que le
resultará el más económico posible en esa calidad. El fabricante no se responsabiliza por daños causados al aparato por
la omisión de esta precaución previa al uso.</p>
<p class="calibre5">Al comenzar a funcionar, la perilla marcada “detención” no
debe encontrarse en su punto 1 ni en su punto 2, sino en
cualquier otro. Asegúrese que el funcionamiento sea adecuado
en cualquiera de ambos, pero no lo haga antes de haber dejado
transcurrir un tiempo prudencial desde que dejara de funcionar. No es posible transferir la perilla del punto 1 al 2
mientras el aparato funcione o esté conectado al suministro
eléctrico, ni del 2 al 1 estando detenido o desconectado. En
caso de tener problemas aun siguiendo estas sencillas reglas,
consulte a su representante.</p>
<p class="calibre5">Cuando el aparato esté en régimen, puede trasladarlo de un
lugar a otro sin desconectarlo, pero hasta en este caso es
preferible no hacerlo.</p>
<p class="calibre5">No olvide desconectar los fusibles si no desea dejar de
desacoplar la polea cuando no la use. En todo caso, constate
que la desviación del ajuste de la crapodina de baja se mantenga sobre la mínima permitida. Puede suceder que se produzcan ruidos que pueden molestar debido a la no observación de
esta simple regla. En casos extremos, el circuito de protección del aparato llegará a destruirlo.</p>
<p class="calibre5">Nuestro sistema de conexión de polea múltiple elimina el
complejo sistema de varias poleas, el que es incluido. Para
el uso con el sistema múltiple, se recomienda la posición
vertical del aparato, aunque la horizontal es todavía mejor.
Respete siempre estas indicaciones útiles para el manejo:
para el movimiento hacia adelante, utilice la llave de avance; la llave de pausa no puede ser utilizada simultáneamente
con la de avance, pero la de avance puede utilizarse cuando
se utiliza la de pausa. Para el movimiento hacia atrás, se
utiliza la llave de avance; el resto de las indicaciones es
idéntico. Para volver a encender el aparato, es imprescindible haberlo apagado previamente y esperar un tiempo no
mayor que el prudencial.</p>
<p class="calibre5">Para limpiar la polea transmisora, la que pese a su
cubierta protectora se ensuciará con el uso de buen o mal
grado, siga el siguiente procedimiento: Una vez comprobado
que la transmisión no se efectúa con limpieza, levante el
cubre-polea superior y examine la polea. Si la misma está
cubierta de abundante pelusa, polvo y otra suciedad, proceda
a la limpieza. En caso contrario, no es necesario limpiarla,
aunque puede hacérselo en forma preventiva. Para limpiar,
debe usarse un mondadientes cubierto de algodón u otra sustancia. Los mondadientes comunes no sirven, pues se astillan
asiduamente y pueden agravar el problema dejando astillas de
madera en el aparato. Por ende, utilice mondadientes de buena
calidad, de dos o más puntas. Envuelva el algodón pero no
otra sustancia en solamente una de las puntas, y humedeciéndolo apenas en alcohol fino (el aguardiente no sirve), páselo
por la polea frotando solamente en dirección transversal,
hasta eliminar totalmente la mugre. Deje secar entre cinco y
diez minutos y cierre inmediatamente el aparato.</p>
<p class="calibre5">ADVERTENCIA: Nunca abra la caja interior, bajo peligro de
muerte, pues contiene sustancias deletéreas para Ud. y para
los demás. Los sobrevivientes podrán ser perseguidos judicialmente.</p>
<p class="calibre5">Muchos problemas en el funcionamiento son causados por
operación errónea o incorrecta del aparato, cuando no siempre
por su intento de reparación por individuos inexpertos o
inescrupulosos. Por lo tanto, en caso de cualquier problema,
contacte inmediatamente a su representante más cercano. Si
tiene dudas sobre el funcionamiento, relea cuidadosamente
estas sencillas instrucciones.</p>
<p class="calibre5">El fabricante no se responsabiliza por defectos causados
por negligencia o manipulación incorrecta en el uso normal
del aparato. Las piezas móviles no se encuentran amparadas
por la garantía. El chasis y la caja externa son garantizados
por los fabricantes de los mismos.</p>
<p class="resumen2">Esta nota proviene de la revista APERTURA. Nos pareció
realmente interesante transcribirla para que todos nuestros
lectores se enteren de algunos pormenores informáticos
dentro de la Carrera Espacial.</p>
</div>
<div class="line" id="perdidos-en-el-espacio">
<h2 class="indiceautor">PERDIDOS EN EL ESPACIO</h2>
<p class="calibre5">Laurence Gonzales - 1995</p>
<p class="pri2">Con los equipos que se usaron en ese momento, la explosión
del Challenger era inevitable. Desde entonces, un grupo de
jóvenes ingenieros lucha por convencer a la NASA de <em class="calibre9">tirar los</em>
<em class="calibre9">viejos mainframes IBM y empezar de nuevo.</em></p>
<p class="pri2">Frente a una de las enormes puertas de cemento del edificio
número 30 lo espera un guardia armado para darle una credencial y un código secreto de cuatro dígitos. Con ellos debe
atravesar el hall de entrada. Introduce su mano en una caja e
ingresa su código en un panel con sensores digitales. Mientras tanto, una cámara detrás de un espejo escanea su rostro.
Se abre una puerta de metal. Usted entra y lo primero que ve
es un cartel: ¡ADVERTENCIA! ESTE ES UN AMBITO DE OPERACIONES
UTILIZADO PARA EL APOYO DE LAS MISIONES ESPACIALES. NO TOCAR
NADA”. Este edificio, pintado del color de los fideos crudos,
cobijó durante años al departamento de Control de Misiones de
la National Aeronautics and Space Administration (NASA), la
cual, desde los días del Apollo y el Gémini ya no es la
misma. Gracias a Dios.</p>
<p class="calibre5">Usted sigue su camino. Se sumerge en infinitos corredores
atestados de equipos estentóreos. Hacia cualquier lado adonde
mira puede ver viejos gabinetes de metal pintado de verde,
recubiertos de metros y metros de cable. Se apilan en rincones, porque hoy se los están llevando. Los reemplazan por
equipos más pequeños: modernas esculturas de plástico lustroso con circuitos integrados.</p>
<p class="calibre5">Cruza un nuevo cuarto. Otra medusa de cables se enrula en
el piso, docenas de pintorescos carretes de cinta para computadora inician y detienen su ciclo nerviosamente, gigantescas
impresoras escupen kilómetros de papeles y cientos de monitores monocromáticos engarzados en carcasas de metal, que se
asemejan a aquellos antiguos tanques de la armada norteamericana, se amontonan en una esquina. Frente a ellos: nuevos
drives, máquinas robóticas con 85 gigabytes de memoria y
brillantes monitores color. Una moviola almacena, en discos
ópticos, 1,2 terabytes de data, que contienen información
sobre todas y cada una de las misiones espaciales realizadas
por la NASA. Sólo cuatro equipos pasarán a reemplazar a un
edificio entero de cintas magnéticas.</p>
<p class="calibre5">Ya no puede eludir la pregunta: los astronautas de la
misión STS-59 —ahora en la estratósfera—, ¿sabrán que su
delicada aeronave flota en el espacio en el mismo momento en
que se está intentado reconstruir la institución? ¿Puede
imaginar a un paciente que sufre un transplante de corazón
bajo el cuchillo de un cirujano, mientras, a su alrededor, la
sala de operaciones es remodelada?</p>
<p class="calibre5">Así es la revolución que está llevándose en la NASA; allí,
John Muratore (38) es el Che Guevara. Su Campaña comenzó hace
más de una década, cuando descubrió que su laptop podía hacer
cosas que no podían hacer las computadoras del departamento
de Control de Misiones. Inició, entonces, una lucha silenciosa. Pronto, sin embargo, su pacífico movimiento se transformó
es un desesperado esfuerzo para rescatar a la Space Agency de
la extinción. Con ese objetivo en mente, Muratore y un grupo
de jóvenes ingenieros —el Team Pirata, como se los llamó más
tarde—, sostuvieron durante años una ininterrumpida guerrilla contra la gruesa burocracia de la NASA. El equipo debió,
literalmente, tirar todas las computadoras y empezar de
nuevo. ¿Se sorprende? Lo verdaderamente asombroso fue que
para lograr su cometido debieron hacerlo en el más completo
secreto. ¿Se imagina tratando de esconder una computadora
detrás de la cortina? Pues ellos debieron hacerlo. Se encontraban de noche, pedían equipamiento prestado. Operaban en
canales paralelos. Y sus actividades continuamente rayaban el
filo de la legalidad.</p>
<p class="calibre5">Así dieron inicio al despegue virtual de una de las agencias espaciales más elitistas del mundo; hoy están a punto de
asestar el golpe final. El plan número uno ha sido cumplido:
renovar el hardware dentro del edificio. El plan número dos
será un poco más difícil: eliminar los cohetes que utiliza la
NASA desde tiempos inmemoriales. Rediseñar los vehículos
espaciales con ayuda de la próxima generación de tecnología
secreta, con el fin de crear, luego de 15 años, una nueva
nave capaz de transportar humanos. El Team Pirata ya rescató
a la NASA de su pasado, ahora resta preguntarse si podrá
llevarla al futuro.</p>
<p class="calibre5">En 1986, cuando murió la tripulación espacial más famosa
de la historia a causa de la explosión del Challenger, John
Muratore —que en ese momento tenía 29 años— trabajaba como
controlador de vuelo en el departamento de Control de Misiones. Con él también estaba Linda Perrine (21), quien acababa
de terminar la universidad. Luego de haber pasado seis meses
en Consumable Planning estudiando la misión del transbordador, ése era su primer día en el cuarto de Control. “Recibí
un extraño mensaje de Cabo Cañaveral al poco tiempo del
despegue —recuerda Perrine—; decía: ‘rastreando múltiples
blancos’. Ya no rastreaban un gran blanco, sino muchos.”
Levantó la mirada hacia una de las pantallas y vio una bola
de fuego de color naranja. Uno de los motores SRB, solo y
dislocado, había despegado por su cuenta; iba dibujando en el
cielo un tormentoso surco blanco a medida que caía.</p>
<p class="calibre5">No era necesario consultar a un científico para imaginar
que la NASA podía dejar de existir si no se realizaban
modificaciones drásticas. El accidente no era tal. Era una
norma. Y, para Muratore, la norma se hizo aparente el mismo
día en que por primera vez pisó la institución. Supuestamente, la NASA había sido siempre el <em class="calibre9">sine qua non</em> de la tecnología. Sin embargo, caminar por ella era una experiencia
digna de las películas de James Bond de los años ‘60. Monitores del tamaño de un tanque. ¿Color?, Desconocido. Nada de
gráficos. Sólo interminables columnas de números en verdes
pantallas titilantes. Los ingenieros aún utilizaban los
mainframes IBM 3083s, del mismo tamaño que los voyagers
Plymouth. Figúrese esta escena: aquí llega Tom Cruise para
concurrir al exclusivo colegio de Top Gun y se encuentra con
que todos conducen camiones de basura. Una pesadilla. No
importa su tamaño, los viejos y descomunales mainframes sólo
pueden realizar una tarea por vez; por esa razón, a medida
que aumentaba su trabajo, los resultados se retrasaban. Era
muy común ver a los ingenieros de la NASA esperando en fila
frente a las máquinas, como si fuera la hora del almuerzo. Y
no hace mucho tiempo. Esta arquitectura centralizada corrió
los sistemas de la agencia durante los últimos 10 años. Pero
esperar en la cola no era lo peor. Entonces, como hoy, cada
vez que un cohete despegaba al espacio, aquellos que lo
controlaban debían trabajar con los datos en tiempo real;
saber desde cuánto combustible quedaba en el tanque hasta qué
temperatura tenía el motor. Pero, en aquel momento, toda esta
información —llamada telemetría— caía del espacio en forma
de números, sin depurar, cual tormentosa catarata del Niágara. Interpretarlos era igual que tratar de juzgar la velocidad de un automóvil con el solo hecho de sacar la cabeza por
la ventanilla y contar cuántas veces da vuelta la rueda. La
información estaba allí. Por supuesto. Pero existía un
detalle que nadie había reparado: transformar esos datos en
algo útil requería de un esfuerzo sobrehumano.</p>
<p class="calibre5">Si su nave espacial está surcando los cielos a 28.000
kilómetros por hora, de poco le servirá enviar las cifras a
Tierra para que sean interpretadas y obtener los resultados
un día, una semana o hasta un mes más tarde. Por otra parte,
a medida que los cálculos se hacían más complejos, el
titánico IBM 3083s perdía maniobrabilidad. La primera crisis
acaeció en 1984 —antes del Challenger—, durante una misión
enviada al espacio para reparar un importante satélite. En el
momento del despegue, el mainframe se desbordó. “Nos quedamos
ciegos”, relata Muratore. Intentaron una rápida conmutación
al mainframe que tenían como respaldo, pero volvió a suceder.
“Todos se miraban sin saber qué hacer, y yo pensaba en la
tripulación, que nos podía estar necesitando en ese preciso
instante. Pensaba que, a partir de ese momento, algo iba a
tener que cambiar.” Pero nada cambió. Los jefes parecían no
darse cuenta.</p>
<p class="calibre5">Muratore y su equipo podían escribir programas desde sus
computadoras de mesa, hacer desaparecer en un segundo el
rompecabezas de números que inundaba las pantallas de Control
de Misiones y hasta hacer gráficos y dibujos animados. Pero
nadie quería hablar del tema. La prensa no se enteró y, al
poco tiempo, todo volvió a funcionar como antes. Incluso el
mainframe IBM. Y volvió a suceder. Fue en 1986, durante una
práctica simulada después de la explosión del Challenger. La
computadora comenzó a enviarle una extraña información al
orbitador del shuttle, la parte de la nave que, luego del
despegue, planea de vuelta hacia la tierra. Allí le decía que
se encontraba a una altura mayor de la que en realidad estaba. El orbitador creyó estar atravesando el espacio, cuando
en realidad se hallaba aún en la atmósfera. Como resultado,
la tripulación se soltó del orbitador y el cohete salió
despedido fuera de control. Si aquel hubiera sido un vuelo
real, todos habrían muerto. Los managers, sin embargo, sólo
atinaron a sacudir sus cabezas.</p>
<p class="calibre5">Hace menos de un año decidieron deshacerse del viejo
mainframe IBM 3083s. Lo reemplazaron por un IBM ES/9000s, aún
más grande y centralizado que el anterior. Increiblemente, en
el año 1960, entre la NASA y la Fuerza Aérea norteamericana
consumieron el 90 por ciento de los sistemas de circuitos
integrados vendidos en los Estados Unidos. Eran los únicos
que necesitaban esos artefactos. Las primeras calculadoras
personales salieron al mercado al mismo tiempo que la NASA
mandaba sus astronautas a la Luna. Las empresas de tecnología, que habían recibido el puntapié inicial de esta agencia
del gobierno, ya estaban transformando aquellas inversiones
en productos de consumo.</p>
<p class="calibre5">Tanto Perrine como Muratore fueron la generación que
creció con las primeras computadoras. Para ellos, estas
máquinas eran lo mismo que las motos para la generación de
Marlon Brando: una herramienta de autoridad y velocidad. Por
esa razón, cuando se unieron a la NASA en la década de los
‘80, no podían creer cuán primitiva era su tecnología. Tampoco lo creía Brian Anderson, otro ingeniero que se sumó a la
agencia a los 21 años, luego de la explosión del shuttle.
Anderson era alto, atlético, de cara angulosa. En un lugar
donde todos los ejecutivos de su talla usaban trajes oscuros,
él llevaba unos jeans gastados, zapatillas y una corbata de
Bugs Bunny. Su llegada marcó el inicio de la guerra entre
aquellos que defendían a los enormes sistemas centralizados y
los que querían introducir arquitecturas nuevas, pequeñas
computadoras en red. Para la vieja guardia, la idea de trabajar con networks de PCs era escandalosa. Los ingenieros del
espacio no usaban color. No usaban dibujitos animados. Usaban
reglas de cálculo. Usaban las matemáticas. Comían números en
el desayuno. Muratore no le tenía miedo a los números, pero
sabía que para volar un shuttle de manera segura se necesitaba algo más que los datos en bruto: era imprescindible
poder interpretar la información en tiempo real.</p>
<p class="calibre5">Luego de la explosión del Challenger, la NASA atravesó una
profunda reorganización. Se contrataron cientos de personas y
se invirtieron miles de millones de dólares para asegurar que
un accidente como ese no volviera a suceder. Al menos eso fue
lo que le dijeron al público. En realidad, de acuerdo con lo
dicho por los propios ingenieros de la agencia, no hubo
cambios esenciales. Muratore y Perrine decidieron, entonces,
dejar de lado el ataque frontal y llevar a cabo una campaña
de insurgencia. “La NASA siempre posee algún presupuesto
escondido para el desarrollo de nuevas tecnologías —cuenta
Muratore—; si sos lo suficientemente inteligente como para
convencer a alguien de que lo que hacés es importante, entonces, quizás, obtengas una tajada.” En 1986, Muratore presentó
su propuesta: “El modelo telemétrico de tiempo real será
interconectado con el enlace de bajada del sistema, mediante
la utilización de la tecnología existente”. Traducción: “Con
una PC podemos hacer un mejor trabajo que el que ustedes
hacen con su mainframe IBM”. Pero aún tenía miedo de que,
algún día, alguien le dijera: “Si te gustan tanto los colorcitos, ¿porqué no te vas a trabajar a Apple?”.</p>
<p class="calibre5">Los piratas, finalmente, consiguieron un pequeño presupuesto. La primera compra sería un “downlink telemetry processor”, término ingenieril que designa al artefacto transmisor de información entre el shuttle y las computadoras. Se
dividieron para recorrer el edificio en busca de viejos equipos a los que se les pudiera robar alguna parte. Consiguieron
algunas máquinas prestadas de los propios fabricantes, pero,
lamentablemente, según las regulaciones del Estado, la agencia no podía aceptar regalos: tenía que devolver las computadoras a los 90 días de uso. El trabajo, entonces, se transformó en una maratón. Buscaban los equipos, los programaban a
toda velocidad, los hacían correr, y luego los devolvían. Y
el proceso comenzaba de nuevo. Una y otra vez. Ya eran
absolutos conocedores de todas las piezas disponibles en el
mercado y podían programar mucho más rápido que los propios
programadores del mainframe. Esos eran los años de terror
clandestino, de reuniones a medianoche, de probar esta
máquina, y aquella, y aquella también. El Team Pirata, o los
“Node Pirates”, como también se los empezó a llamar, aprovechaban los almuerzos para conspirar como terroristas y
escribir códigos. Hasta que, en 1988, ya todo estaba listo.
Cierto día tomaron sus equipos y entraron en la sala de
control. Allí los esperaba un lugar vacío, en él debían
conectar su engendro. Pero una nueva discusión se suscitó.
Los managers no estaban de acuerdo. Era el fin. Habían
llegado hasta ahí sólo para que un grupo de burócratas les
prohibiera enchufar un simple cable en la pared. Un cable que
haría correr todo sobre ruedas.</p>
<p class="calibre5">Pasaron los días y volvieron a intentarlo. Esa vez lograron su cometido. En la sala, todos se miraban asombrados;
nadie quería ser desleal al viejo sistema, pero ni el ingeniero más miope podía negar la nueva maravilla en colores.
Daba información en inglés. Incluso dibujaba diagramas. Era
magia. El mainframe siguió en su puesto, inamovible. Hasta
que, una mañana, volvió a caer. El controlador de Muratore,
sin embargo, continuó enviando información. “¿De dónde estás
obteniendo estos datos?”, preguntó el director de vuelos,
mientras miraba su pantalla congelada. “De mi estación de
trabajo”, contestó Muratore.</p>
<p class="calibre5">A pesar de todo, la NASA creyó que con su par de buenas
máquinas ya estaba lista para una nueva misión: la del
shuttle STS-26, el primero después del accidente. Sin
embargo, algo salió mal. A último momento se descubrió una
falla que podría haber hecho explotar la nave por los aires,
pero el mainframe IBM no podía detectarla. Si el cohete
hubiera despegado de todas maneras, el viejo aparato habría
seguido escupiendo datos alegremente, mientras el shuttle
iniciaba su caída libre hacia el océano. Así fue como,
finalmente, Muratore pudo armar un sistema completo. Hubo
quienes aún entonces no lo apoyaron, y cuando lo veían pasar
se enfurecían: Muratore llevaba en el bolsillo del saco un
diskette con el código de telemetría completo, mientras que
el otro sistema necesitaba un edificio entero.</p>
<p class="pri3">Es cien veces más rápida que la mejor supercomputadora serie.
Es mil millones de veces más eficiente energéticamente.
Es un billón de veces más densa que el mejor medio de
almacenamiento. ¡Es una cucharadita de ADN haciendo de
computadora! Y Leonard Adleman la inventó.</p>
</div>
<div class="line" id="genio-del-gen">
<h2 class="indiceautor">GENIO DEL GEN</h2>
<p class="calibre5">Thomas A. Bass - 1995</p>
<p class="pri2">En el verano de 1993, Leonard Adleman yacía en la cama leyendo el libro de texto de James Watson, <em class="calibre9">Biología molecular</em>
<em class="calibre9">de los genes</em> (<em class="calibre9">Molecular Biology of the Gene</em>), cuando le musitó a su esposa, “Cielos, esto es algo realmente asombroso”.
¡Y se le ocurrió la idea!</p>
<p class="calibre5">Adleman, un matemático bien conocido por su trabajo en
computadoras de seguridad y criptografía, chocó con la similitud entre el ADN —la base de la vida— y las computadoras. Usando lo que en esencia es un alfabeto de cuatro letras, el ADN almacena información que es manipulada por organismos vivos casi exactamente de la misma forma en que trabajan las computadoras a través de sus cadenas de unos y ceros.
Así que, ¿no se podría hacer que el ADN funcione como una
computadora? Si la respuesta es sí, se harían accesibles
nuevas formas de construir tipos enteramente diferentes de
computadoras, computadoras tan rápidas que podrían resolver
algunos de los problemas actualmente insolubles, tan pequeñas
que podrían existir al nivel molecular.</p>
<p class="calibre5">Gracias a los algoritmos de aprendizaje y otras herramientas evolucionarias que se han incorporado a las computadoras,
las máquinas que nos rodean imitan cada vez más a la vida.
Pero Adleman quiso atacar la cuestión desde la dirección
opuesta. ¿Y si la vida misma, susceptible ya a la ingeniería
genética, pudiera ser usada para resolver problemas? ¿Y si se
pudiera hacer que el ADN en lugar de reproducir la vida pensara acerca de ella? Adleman imaginó un futuro en el cual se
unen las computadoras orgánicas y las inorgánicas; quiso presenciar esa ocasión trascendental durante su vida.</p>
<p class="calibre5">Inspirado, saltó de la cama y comenzó a construir la primera computadora de ADN en el mundo.</p>
<p class="calibre5">Durante los ‘80, cuando Adleman asumió la investigación
del SIDA en adición a la matemática, se encontró en una rara
posición para un científico de computadoras, ya sabía cómo
hacer el trabajo biológico de laboratorio. Era capaz de sintetizar hebras de ADN y empalmarlas y barajarlas para leer
los mensajes deletreados en sus cadenas moleculares. Pero
¿qué mensaje debía ser codificado si el ADN iba a resolver un
problema computacional?</p>
<p class="calibre5">Tras seis meses de intensa investigación, garabateando
fórmulas, a menudo reducido a un trance agitado, Adleman
gritó ¡Eureka! Era la navidad de 1993, y dos inesperados regalos yacían frente a él: un diseño de la primera computadora
molecular del mundo y el primer problema que debía resolver.</p>
<p class="calibre5">Adleman imaginó comprobar a su computadora de ADN con algo
llamado “problema Hamiltoniano de caminos, dirigido”. (El
problema Hamiltoniano de caminos fue nombrado así en honor
del matemático irlandés William Rowan Hamilton, quien ideó
este acertijo rutero en 1857). Una versión simplificada de
esto, conocida como el problema del vendedor itinerante, propone la siguiente cuestión: Dada una colección arbitraria de
ciudades entre las que un vendedor tiene que viajar, ¿cuál
será la ruta más corta que una estas ciudades? La versión de
Adleman limitó el numero de rutas conectadas entre ciudades
especificando en cuáles debía comenzar y terminar su jornada
el vendedor. Puesto que no todas las ciudades están directamente conectadas, el desafío está en descubrir el camino
continuo que las una a todas.</p>
<p class="calibre5">Un problema Hamiltoniano de caminos que involucre a cuatro
o cinco ciudades puede ser resuelto garabateando en un pedazo
de papel, pero cuando el número de ciudades crece aunque sea
un poco, la dificultad del problema se agranda, se convierte
en lo que en términos matemáticos es conocido como problema
difícil. Los problemas difíciles no pueden ser resueltos eficientemente mediante ecuaciones algebraicas. Sólo pueden hallarse las respuestas desmenuzando toda solución posible, y
la mayoría de los problemas difíciles lo son demasiado para
ser resueltos por humanos o computadoras. Hallar, por ejemplo, un camino Hamiltoniano que conecte 100 ciudades usando
un algoritmo bien conocido, tomaría 10147 operaciones. Asumiendo que uno intentara resolver el problema con una computadora que trabaje a un millón de millones de operaciones por
segundo, este cómputo tomaría 10135 segundos, ¡muchísimo más
que la edad del universo!</p>
<p class="calibre5">“No quise hacer un truco barato”, dice Adleman al elegir
este problema. “Pensé que las computadoras moleculares podrían ser capaces de resolver problemas que actualmente no
son solubles con computadoras electrónicas; quise que el
argumento fuera convincente”.</p>
<p class="calibre5">Adleman limitó su “test” a siete ciudades conectadas por
catorce rutas posibles. Buscaba el itinerario que se sabía
que conectaba las ciudades en un camino Hamiltoniano dirigido, un camino que comenzaría en Atlanta, terminaría en Detroit, y pasaría por cada ciudad interviniente sólo una vez.
Lo que importaba no era la respuesta (Adleman ya la sabía),
sino la pregunta. ¿Podría computar el ADN? ¿Podría resolver
un problema que ejemplifica aquello que está actualmente
fuera de nuestro alcance?</p>
<p class="calibre5">Un día después de navidad, Adleman manejó su automóvil
hasta el laboratorio de virología de la Universidad de California del Sur en Pasadena. Había estado investigando con las
células blancas y cómo el HIV las mata selectivamente. Pero,
ese día, Adleman no planeaba curar nada como no fuera una comezón intelectual. Ordenó 21 tubos de ensayo de ADN de hélice
simple (uno por cada ciudad y las 14 rutas que las conectan).</p>
<p class="calibre5">Algunos días después, llegaron al escritorio de Adleman
una serie de redomas de vidrio con lo que parecían ser bolas
de polvo amontonadas en el fondo. Tomó un pellizco de cada
bola y la arrojó en tubos de ensayo conteniendo una solución
acuosa. Un segundo después tenía su respuesta, y el mundo tenía su primer computadora molecular. Una vez que los contenidos de los tubos de ensayo fueron filtrados y amplificados,
quedaron un billón de copias de una molécula cuyas largas
cadenas de palabras de cuatro letras codificaban un camino
Hamiltoniano para ir de Atlanta a Detroit. El día de su creación, la computadora de ADN de Adleman (él la llamó la TT
100, por los tubos de ensayo de 100 microlitros) ya era más
rápida, económica y pequeña que su prima electrónica. Esto
era realmente algo asombroso.</p>
<div class="line" id="cabriolas-criptograficas">
<h3 class="calibre14">Cabriolas criptográficas</h3>
<p class="calibre5">Aunque es un profesor de ciencias de la computación en la
Universidad de California del Sur en Los Angeles, de 49 años,
con un mechón de rulos castaños sobre las orejas, Adleman
parece un perpetuo estudiante, un escurridizo profesor que
podría entrar en cualquier momento al pub del campus. Sencillo y elegante, juega bastante mal a la paleta.</p>
<p class="calibre5">La oficina de Adleman es un cubo de tres por tres amueblado con un escritorio de metal y un par de sillas de plástico marrón. Es notable por lo que no tiene: una potente
computadora. Zumbando bajo la ventana hay una vieja IBM PC-AT
con una pantalla Goldstar blanco y negro. Adleman usa esta
terminal “tonta” para mandarse a sí mismo mensajes e-mail
durante el día, pequeños recordatorios de cosas que supuestamente debe hacer.</p>
<p class="calibre5">La otra oficina de Adleman, en su casa de San Fernando
Valley, donde hace la mayoría de su trabajo, es igualmente
espartana; alberga, sin embargo, una Pentium de 90 MHz. Mirando esos espacios neutrales y lisos uno concibe la idea de
que la vida real de Adleman es en otra parte, que él habita
un paisaje mental lejos de esas habitaciones.</p>
<p class="calibre5">Adleman siempre supo que iba a ser un científico. De niño,
mientras sus amigos iban a surfear, él se levantaba a las 6
AM para ver los experimentos científicos de Mr. Wizard en la
TV. Su fuerte era la matemática. “Era obvio para mí”, dice.
“Sentía que podía haber cursado toda la matemática de la
secundaria en una semana”.</p>
<p class="calibre5">Después de completar un posgrado de matemática en la Universidad de California en Berkeley en 1968, Adleman desapareció de la escuela para graduados para trabajar para el Banco
de la Reserva Federal en San Francisco. Allí usó la computadora principal para correr juegos como el “Vida”, una simulación temprana de vida artificial.</p>
<p class="calibre5">Después de terminar la escuela para graduados en el ‘76
(en su segundo intento) con un doctorado en ciencias de la
computación (su tesis fue sobre la teoría lógica y numérica),
el padre de Adleman le aconsejó volver al banco, al menos
éste ofrecía un plan de pensión. No obstante, Adleman tomó un
empleo como profesor en el MIT por U$S 13.000 al año. Otros
dos jóvenes investigadores, Ron Rivest y Adi Shamir, ocuparon
oficinas contiguas y todos se hicieron buenos amigos. Aunque
Rivest y Shamir tenían una pasión que inicialmente no era
compartida por Adleman.</p>
<p class="calibre5">Un día, al año siguiente, Adleman notó que Rivest tenía
una mirada salvaje. Rivest echó en las manos de su amigo el
borrador de un ensayo de Whitfield Diffie y Martin Hellman
anunciando su descubrimiento teórico de la criptografía de
clave pública, una nueva forma de codificar información.
Exactamente cómo se podría implementar, todavía era una
incógnita.</p>
<p class="calibre5">Esto requería algo llamado funciones de un sólo sentido,
fáciles de computar en una dirección, pero prácticamente
imposibles de computar en la dirección inversa. Por ejemplo,
multiplicar dos números primos es fácil, pero trabajar en la
dirección opuesta (factorear los componentes primos de un
número) es extremadamente difícil. La criptografía de clave
pública eventualmente enfatizaría este hecho para diseñar
claves públicas (el producto de dos números primos) para
encriptar mensajes, y claves secretas (los factores de esos
números primos) para desencriptar mensajes.</p>
<p class="calibre5">Los amigos de Adleman no podían parar de hablar de funciones de un sólo sentido y formas de quebrar un código secreto;
eventualmente su entusiasmo probó ser contagioso. Rivest y
Shamir continuaron tirando ideas sobre cómo implementar un
sistema criptográfico de clave pública, y Adleman, el experto
en teoría numérica, fue asignado a hallar agujeros. En los
siguientes meses, él resquebrajó 42 sistemas potenciales. Algunos involucraban ecuaciones que les tomaron minutos resolver; otros requirieron un día o dos de dura meditación.</p>
<p class="calibre5">Una noche, luego de una cena de Pascuas con unos amigos,
una llamada telefónica despertó a Adleman. Era Rivest con el
sistema criptográfico de clave pública número 43.</p>
<p class="calibre5">“Supe que él me saldría con un sistema imbatible”, dice
Adleman. “Llegas a tener un sexto sentido para estas cosas si
las piensas el tiempo suficiente; mi juicio estético me decía
que él finalmente lo había logrado”.</p>
<p class="calibre5">Rivest permaneció despierto toda la noche escribiendo un
borrador del ensayo de la investigación, el cual presentó a
sus colegas la mañana siguiente. Publicado en la <em class="calibre9">Comunications of the ACM</em> de Febrero de 1978 bajo la autoría conjunta
de Rivest, Shamir y Adleman, el ensayo fue oficialmente titulado “Un Método para Obtener Firmas Digitales y Criptosistemas de Clave Pública”. (El método es ampliamente conocido hoy
en día por las iniciales del grupo “RSA”.)</p>
<p class="calibre5">“Creí que esta sería la parte menos importante de todo mi
trabajo”, dice Adleman. “Era tan ingenuo acerca de la criptografía y sus aplicaciones”.</p>
<p class="calibre5">Pero pronto los tres se convirtieron en figuras internacionales. Correo de todo el mundo comenzó a apilarse en la
oficina de Rivest, incluyendo cartas de aspecto sospechoso
procedentes del departamento de defensa de Bulgaria. Entonces, la Agencia Nacional de Seguridad se puso en contacto.
Adleman nunca había oído de la ANS, el aparato secreto de
espionaje del gobierno (recuerden, esto fue en los ‘70); los
espías llamaban para decirles que el gobierno de los EE.UU.
clasificaba la criptografía como armamento, y que si ellos
enviaban su artículo a través del océano serían procesados
por comercio ilegal de armas.</p>
<p class="calibre5">¡Demasiado tarde! El genio ya había salido de la botella.
Hacia fines de los ‘70 las conferencias sobre criptografía se
extendieron a lo largo de los Estados Unidos y Europa, la
criptografía se estaba convirtiendo rápidamente en una disciplina matemática aparte. “Desde que apareció nuestro artículo, no se ha detenido”, dice Adleman, “científicamente,
comercialmente, políticamente”.</p>
<p class="calibre5">Más tarde, Rivest, Shamir y Adleman decidieron entrar en
el negocio de la criptografía. “Fue algo como, ‘Jé, construiremos una corporación industrial de alta tecnología en nuestro tiempo libre’”, dice Adleman. Los contratos fueron firmados en el departamento de Adleman en Los Angeles en 1982, él
ahora era el presidente de RSA Inc.</p>
<p class="calibre5">Entonces, ¿cómo hizo Adleman para convertirse en un hombre
de negocios? Él echa la cabeza atrás y se ríe. “En mis manos
los negocios se iban por el retrete”, dice. “Era terrible.
Espantoso. Eventualmente reorganizamos la compañía y tomamos
a un verdadero presidente”. Se refiere a James Bidzos, quien
se unió a RSA en 1986. Adleman aún es accionista y consejero
de la compañía cuyo futuro él prevé como “relativamente brillante”.</p>
</div>
<div class="line" id="si-es-digital-puede-hacer-cuentas">
<h3 class="calibre14">Si es digital, puede hacer cuentas</h3>
<p class="calibre5">Fue mientras trabajaba en criptografía y otros problemas en
computadoras de seguridad que Adleman comenzó a derivar hacia
aguas un tanto inusuales para un matemático. “Típicamente,
cuando rondan los 40 años, los matemáticos se interrumpen y
suben a tomar aire”, dice. “No pierden su amor por la matemática, pero miran alrededor buscando algo nuevo”. Cuando Adleman echó un vistazo en otros sitios, vio la biología. Aunque
acuñó el término “virus de computadoras” para describir a los
programas malignos y autorreplicantes, fue su estudiante graduado, Fred Cohen —ahora presidente de Management Analytics,
un grupo de consulta para información de seguridad con base
en Monroe Falls, Ohio— quien liberó en 1983 (en un experimento controlado) el primer virus de computadoras del mundo.</p>
<p class="calibre5">Al mismo tiempo, Adleman reconocía que el SIDA dominaba la
literatura científica. Comenzó a leer sobre inmunología y a
pasearse por la escuela médica de la UCLA, asistiendo a conferencias sobre tópicos tales como los leucocitos y el sistema inmunológico.</p>
<p class="calibre5">En corto tiempo, Adleman había arribado a otro descubrimiento. Creía que un tratamiento efectivo para el SIDA residía en remover selectivamente un tipo de leucocitos —conocidos como células CD8— del individuo infectado. Un mecanismo
homeostático natural en el cuerpo reemplazaría automáticamente entonces las CD8 con las mucho más necesarias CD4, aquellas muertas por el HIV. Adleman y el Dr. David Wofsy, un
profesor de inmunología de la Universidad de California en
San Francisco, comenzaron a experimentar con ratones genéticamente alterados para probar sus hipótesis. Parte de sus
descubrimientos, ahora confirmados por otros científicos de
Johns Hopkins, fueron publicados en el número del 1º de
febrero de 1993 del <em class="calibre9">Journal of Acquired Immune Deficiency</em>
<em class="calibre9">Syndromes</em>.</p>
<p class="calibre5">Que Adleman, un matemático, pueda meter la nariz en biología y descubrir algo importante es un indicativo de la revolución actual en las ciencias de la vida. “Las ciencias alcanzan un punto donde se matematizan”, dice, acuñando una
nueva frase. Este proceso comienza en las orillas, pero, en
algún punto, los resultados centrales en el campo se vuelven
suficientemente comprensibles para que puedan ser pensados
matemáticamente. Sucedió en la física hacia el Renacimiento;
comenzó en la química después de que John Dalton desarrollara
la teoría atómica; y ya está comenzando a suceder en la biología.</p>
<p class="calibre5">“Cuando era un estudiante en los ‘60”, dice Adleman,
“Creía que la biología era algo que olía raro en el refrigerador. Ahora, la biología es cadenas finitas de un alfabeto
de cuatro letras y funciones que las enzimas realizan en esas
cadenas”.</p>
<p class="calibre5">A medida que la biología se une a las filas de las ciencias duras, una atemorizante perspectiva se abre para Adleman. Tras atravesar una era de especialización, las ciencias
se están reuniendo ahora en un modo común de investigación.
“La nueva generación podría producir un científico en el
viejo sentido”, dice, “un verdadero generalista, quien podría
aprender física, química y biología y ser capaz de contribuir
a las tres disciplinas a la vez”.</p>
<p class="calibre5">La clave de este renacimiento científico es la matemática.
“La gente habla de la matemática como el lenguaje de la ciencia”, dice, “pero para mí, la matemática es la ciencia final.
Es una ciencia sin peso. Es una ciencia supersónica. Puedes
estudiar universos enteros dentro de tu cerebro y completar
un experimento en el instante en que lo concibes”. Mientras
se espera que el Galileo del siglo XXI descubra la teoría
unificada de todo, Adleman hace un buen trabajo conectando
disciplinas previamente no relacionadas.</p>
<p class="calibre5">Fue mientras intentaba ahondar en la biología del SIDA que
Adleman se encontraba en la cama leyendo el trabajo de James
Watson, codescubridor, con Francis Crick, de la estructura
del ADN. Adleman leía el capítulo de Watson sobre la polimerasa, la enzima que reproduce el ADN. La polimerasa se conecta con el ADN de hélice simple en un lugar específico y
luego procede a recorrer la cadena, nucleótido por nucleótido, construyendo una copia complementaria. Adleman cayó en
la cuenta de que este proceso biológico es casi idéntico a la
forma en que trabajan las computadoras. “Podrías usar ADN
para computar”, dice. “Todo lo que necesitas es cortar, pegar
y copiar ADN en el orden correcto”.</p>
<p class="calibre5">El ácido desoxirribonucleico —abreviado ADN— es una molécula formada encadenando juntos cuatro nucleótidos o construyendo bloques: A (adenina), T (timina), G (guanina) y C
(citosina). El ADN existe virtualmente en todas y cada una de
las células, nosotros tenemos alrededor de medio kilo de esto
adentro. El hecho de que el ADN se configure en hélices usando pares de base cuatro en lugar de dos —como los 1s y 0s de
las computadoras basadas en el silicio— es matemáticamente
irrelevante. Ambos sistemas son igualmente buenos para codificar información. “El ADN es esencialmente digital”, dice
Adleman. Esto significa que puede hacer cuentas. “En un sistema digital, virtualmente cualquier grupo de operaciones
primitivas permitirá hacer una computación”, dice. “Es sólo
cuestión de ponerlas juntas en la secuencia correcta”.</p>
<p class="calibre5">Una vez que obtuvo la idea de usar ADN para computar, Adleman tuvo que pensar en un problema a resolver. El vendedor
itinerante de Hamilton era el boleto. ¿Podría el ADN encontrar un único itinerario que permitiera a nuestro intrépido
aeronauta viajar eficientemente a través de siete ciudades
con catorce vuelos que las interconecten? Una versión simplificada del experimento de Adleman, usando cuatro ciudades en
lugar de siete, sería como sigue: Atlanta, Baltimore, Chicago
y Detroit son las cuatro ciudades en cuestión. Se pueden
elegir vuelos sin escalas entre los siguientes:</p>
<table border="1" class="docutils">
<colgroup class="calibre22">
<col width="50%" class="calibre23"/>
<col width="50%" class="calibre23"/>
</colgroup>
<tbody valign="top" class="calibre24">
<tr class="calibre25"><td class="calibre26">Atlanta-Chicago</td>
<td class="calibre26">Chicago-Baltimore</td>
</tr>
<tr class="calibre25"><td class="calibre26">Chicago-Detroit</td>
<td class="calibre26">Baltimore-Detroit</td>
</tr>
</tbody>
</table>
<p class="calibre5">Comenzando en Atlanta y terminando en Detroit, ¿puede uno
encontrar tres vuelos secuenciales que lo lleven a través de
las cuatro ciudades? La respuesta es “Sí”. Vuelas de Atlanta
a Chicago, de Chicago a Baltimore y de Baltimore a Detroit.
Cualquier niño bueno en crucigramas puede resolver este
problema. La pregunta es: ¿Puede hacerlo el ADN? Si puede,
entonces le arrojas unas pocas ciudades más a la ecuación
(haciendo el problema demasiado difícil para las supercomputadoras más rápidas del mundo) y miras al ADN hacer algunos
cómputos realmente asombrosos.</p>
<p class="calibre5">Pero volvamos a nuestro ejemplo simplificado.</p>
<p class="calibre5">Se asignó a cada ciudad un nombre de ADN comprendido de
seis letras elegido al azar del alfabeto de cuatro letras del
ADN. (Adleman en realidad utilizó nombres de 20 letras.)</p>
<table border="1" class="docutils">
<colgroup class="calibre22">
<col width="50%" class="calibre23"/>
<col width="50%" class="calibre23"/>
</colgroup>
<thead valign="bottom" class="calibre27">
<tr class="calibre25"><th class="head">Ciudad</th>
<th class="head">Nombre de ADN</th>
</tr>
</thead>
<tbody valign="top" class="calibre24">
<tr class="calibre25"><td class="calibre26">Atlanta</td>
<td class="calibre26">ATGCGA</td>
</tr>
<tr class="calibre25"><td class="calibre26">Baltimore</td>
<td class="calibre26">CGATCC</td>
</tr>
<tr class="calibre25"><td class="calibre26">Chicago</td>
<td class="calibre26">GCTTAG</td>
</tr>
<tr class="calibre25"><td class="calibre26">Detroit</td>
<td class="calibre26">GTCCGG</td>
</tr>
</tbody>
</table>
<p class="calibre5">A los vuelos entre ciudades se les asignó un número de
vuelo de ADN. Este número se creó combinando las últimas tres
letras del nombre de ADN de la ciudad de partida con las primeras tres letras del nombre de ADN de la ciudad de destino:</p>
<table border="1" class="docutils">
<colgroup class="calibre22">
<col width="33%" class="calibre23"/>
<col width="33%" class="calibre23"/>
<col width="33%" class="calibre23"/>
</colgroup>
<thead valign="bottom" class="calibre27">
<tr class="calibre25"><th class="head">Vuelo</th>
<th class="head">Nombres de ADN</th>
<th class="head">Números de ADN</th>
</tr>
</thead>
<tbody valign="top" class="calibre24">
<tr class="calibre25"><td class="calibre26">Atlanta-Chicago</td>
<td class="calibre26">ATGCGA-GCTTAG</td>
<td class="calibre26">CGAGCT</td>
</tr>
<tr class="calibre25"><td class="calibre26">Chicago-Detroit</td>
<td class="calibre26">GCTTAG-GTCCGG</td>
<td class="calibre26">TAGGTC</td>
</tr>
<tr class="calibre25"><td class="calibre26">Chicago-Baltimore</td>
<td class="calibre26">GCTTAG-CGATCC</td>
<td class="calibre26">TAGCGA</td>
</tr>
<tr class="calibre25"><td class="calibre26">Baltimore-Detroit</td>
<td class="calibre26">CGATCC-GTCCGG</td>
<td class="calibre26">TCCGTC</td>
</tr>
</tbody>
</table>
<p class="calibre5">Cada hélice de ADN tienen una hélice complementaria formada sustituyendo T por A, G por C y viceversa. (A sólo puede
unirse a T y G puede sólo unirse con C). Cuando esas hélices
complementarias se acercan, se unen. Esto es lo que le da al
ADN su estructura de espiral de doble hélice. Entonces cada
ciudad tiene un nombre de ADN complementario:</p>
<table border="1" class="docutils">
<colgroup class="calibre22">
<col width="33%" class="calibre23"/>
<col width="33%" class="calibre23"/>
<col width="33%" class="calibre23"/>
</colgroup>
<thead valign="bottom" class="calibre27">
<tr class="calibre25"><th class="head">Ciudad</th>
<th class="head">Nombre de ADN</th>
<th class="head">Nombre de ADN complem.</th>
</tr>
</thead>
<tbody valign="top" class="calibre24">
<tr class="calibre25"><td class="calibre26">Atlanta</td>
<td class="calibre26">ATGCGA</td>
<td class="calibre26">TACGCT</td>
</tr>
<tr class="calibre25"><td class="calibre26">Baltimore</td>
<td class="calibre26">CGATCC</td>
<td class="calibre26">GCTAGG</td>
</tr>
<tr class="calibre25"><td class="calibre26">Chicago</td>
<td class="calibre26">GCTTAG</td>
<td class="calibre26">CGAATC</td>
</tr>
<tr class="calibre25"><td class="calibre26">Detroit</td>
<td class="calibre26">GTCCGG</td>
<td class="calibre26">CAGGCC</td>
</tr>
</tbody>
</table>
<p class="calibre5">La ingeniería genética, con su metodología de corta-ypega, hace fácil el diseño de moléculas con la secuencia
deseada. Empleando estas técnicas, Adleman sintetizó 30
billones de moléculas para cada una de sus siete ciudades y
otras 30 billones de moléculas para cada una de las 14 rutas.
Cuando fueron arrojadas en el tubo de ensayo conteniendo una
cincuentava parte de una cucharadita de solución acuosa, esos
60 billones de secuencias de ADN se unieron; formaron largas
cadenas de nombres de vuelo de ADN “entablilladas” juntas por
sus complementos.</p>
<pre class="literal-block">
Número de vuelo de ADN               Número de vuelo de ADN
.      Atlanta-Chicago               Chicago-Baltimore
.                       CGAGCT TAGCGA
.                          \     /
.                          CGA ATC
.                          Chicago
.               Nombre de ADN complementario
</pre>
<p class="calibre5">Recuerden, la meta de este experimento abreviado es encontrar un itinerario de vuelo, comenzando en Atlanta y finalizando en Detroit, que conecte las cuatro ciudades y las atraviese sólo una vez.</p>
<p class="calibre5">Después de que cada hélice genética es entablillada con su
complemento, contendrá la respuesta la cadena de letras de
ADN (una molécula) que llene los siguientes requerimientos.
Debe comenzar con el número de vuelo de ADN de un vuelo que
salga de Atlanta (CGA). Debe finalizar con el número de vuelo
de ADN de un vuelo a Detroit (GTC). Y debe contener los
nombres de ADN de todas las ciudades intervinientes, en una
secuencia que resuelva el problema. Pero aún resta un obstáculo.</p>
<p class="calibre5">“Hey, mozo, ¡hay un camino Hamiltoniano en mi sopa!”, bromea Adleman refiriéndose a la dificultad de pescar esta molécula ganadora en su tubo de ensayo.</p>
<p class="calibre5">Empleando técnicas que van desde separación por afinidad
hasta reacción en cadena de polimerasas, limpió de su tubo de
ensayo todas las moléculas que comenzaban en el sitio equivocado, terminaban en el sitio equivocado, eran muy largas, muy
cortas o defectuosas en representar un itinerario exitoso.
Libre de errores moleculares, a Adleman sólo le quedaron
cadenas moleculares de ADN en cuyo alfabeto estaba codificada
la solución a su problema.</p>
<p class="calibre5">Si bien sólo le tomó un segundo llenar su sopa con caminos
Hamiltonianos, le llevó una semana pescarlos.</p>
<p class="calibre5">A causa de las reacciones masivamente paralelas involucradas en la bioquímica (moléculas trabajando juntas al mismo
tiempo), la computadora de ADN de Adleman, en términos del
número de operaciones efectuadas por sus billones de moléculas, era cien veces más rápida que la mejor supercomputadora
serie de hoy en día. Su consumo de energía era mil millones
de veces más eficiente que las computadoras electrónicas, y
su capacidad de almacenamiento era un billón de veces más
densa que la mejor media de almacenamiento de hoy en día,
tales como la cinta de video, por ejemplo. Pero estaba claro
que esta era una tecnología que necesitaba algo de automatización; tenemos que mejorar en la pesca de caminos Hamiltonianos en la sopa.</p>
<p class="calibre5">Adleman publicó sus descubrimientos en el número del 11 de
noviembre de 1994 de la revista <em class="calibre9">Science</em>, donde su artículo
provocó una erupción de comentarios halagadores. “Es más que
listo”, explicó Ronald Graham, director adjunto de ciencias
de la información de Laboratorios Bell en New Jersey, al reportero de un diario a fines de 1994. “Te hace pensar en una
dirección distinta”.</p>
<p class="calibre5">Otros científicos se maravillaron de que un hombre trabajando solo y fuera de su disciplina normal haya inventado repentinamente una nueva clase de computadora. Para resaltar la
importancia del trabajo de Adleman, Science introdujo un editorial junto a su artículo. Escrito por David Gifford, un
científico de computadoras del Instituto Tecnológico de
Massachusetts, alabó al experimento de Adleman como el primer
paso en un proceso que “revolucionará la forma en que pensamos acerca de la ciencia de computadoras y la biología molecular”.</p>
</div>
<div class="line" id="hackers-de-adn">
<h3 class="calibre14">Hackers de ADN</h3>
<p class="calibre5">Gifford fue un tanto más reservado cuando lo llamé en abril
al ITM y le pedí que comentara la computadora molecular de
Adleman. “No es una computadora molecular”, dijo sin vacilar.
“La técnica de Adleman sólo puede resolver cierta clase de
problemas combinatorios. No es una computadora universal o
programable como una IBM PC”.</p>
<p class="calibre5">Debido a la velocidad remarcable a la que está avanzando
este nuevo campo, ahora la reserva de Gifford está en discusión. Ya se ha logrado la brecha necesaria para construir una
computadora molecular universal. En una pequeña conferencia
matemática en Santa Fe, Nuevo México, a fines de 1994, Adleman charlaba acerca de su trabajo con un buen amigo, Richar
Lipton, científico de computadoras de Princeton; Lipton vio
inmediatamente lo que debía hacerse a continuación. Para
diciembre había escrito un ensayo que se había convertido
instantáneamente en el diseño inicial y manifiesto de la
computación molecular universal. Llamado “Acelerando la
Computación vía Biología Molecular”, el ensayo de Lipton,
hasta ahora, se ha “publicado” sólo en Internet (se puede
bajar de <a href="ftp://ftp.cs.princeton.edu/pub/people/rjl/bio.ps">ftp://ftp.cs.princeton.edu/pub/people/rjl/bio.ps</a>).</p>
<p class="calibre5">¿Y la brecha de Lipton? Inventó un cuadro de codificación
para traducir pares básicos de ADN a cadenas de 1s y 0s. También desarrolló algunas técnicas innovadoras para agitar la
sopa genética. Algo tan simple como verter junto el contenido
de los tubos de ensayo llenos con las moléculas genéticamente
secuenciadas permite al ADN simular las compuertas electrónicas por las cuales las computadoras toman sus decisiones de
sí o no.</p>
<p class="calibre5">De un golpe Lipton dotó a las computadoras moleculares con
álgebra Booleana, el proceso que las computadoras usan para
“pensar”. Bautizada en honor del matemático británico de mediados del siglo 19, George Boole, esta forma de lógica simbólica, que ofrece reglas simples para la toma de decisiones,
es la fundación en que se construye la moderna tecnología de
computadoras. La sopa de ADN, realimentada con lógica simbólica, ahora puede resolver las respuestas a una amplia variedad de problemas computacionales, que, teóricamente, la hacen
tan universales y programables como una computadora personal.</p>
<p class="calibre5">Así que ¿qué apariencia tiene esta computadora de ADN?
“Llenará una bañera, no el universo”, dice Lipton, “y será
increíblemente barata de construir”. Medio kilo de ADN en
unos litros de fluido, cubriendo alrededor de un metro cuadrado, retendrá más memoria que todas las computadoras jamás
hechas. Los químicos son baratos; el ADN funciona virtualmente con su propia energía, y la sopa, con un pequeño ajuste, puede ser reutilizada de un experimento al siguiente.
Lipton estima que una computadora de ADN superparalela ofreciendo billones de procesadores trabajando simultáneamente
podría ser construida por U$S 100.</p>
<p class="calibre5">En abril de este año, cuando Adleman planeaba un viaje a
la Costa Este para dar una conferencia sobre computadoras de
ADN en la Universidad de Columbia, Lipton aprovechó el momento
para enviar un mensaje en la red llamando a los científicos a
un seminario improvisado de un día en Princeton que protagonizaría Adleman.</p>
<p class="calibre5">Doscientos investigadores aparecieron y transformaron la
reunión en una conferencia de computación molecular que marcó
un hito. Estaban hirviendo de entusiasmo por aplicar las computadoras moleculares a todo, desde el diseño arquitectónico
y la invención de nuevas drogas a la criptografía y la mecánica cuántica.</p>
<p class="calibre5">La presentación más popular de la conferencia vino de Lipton y dos de sus estudiantes graduados, Dan Boneh y Christopher Dunworth. Ellos diseñaron una computadora de ADN que
creen que es capaz de quebrar la Encriptación Estándar de Información (DES) federal. Este algoritmo criptográfico se utiliza para codificar información gubernamental y otros secretos nacionales. Utilizando un ataque genético, los investigadores de Princeton han descubierto un método de desencriptar
la DES en tres meses. Humorísticamente llaman a su aún impublicado ensayo “Hackers de ADN”.</p>
<p class="calibre5">Inspirado por la brecha de Lipton, Adleman continuó su
artículo de <em class="calibre9">Science</em> con un segundo ensayo, llamado “Construyendo una Computadora Molecular”. Se puede bajar de Internet:
<a href="ftp://usc.edu/pub/csinfo/papers/adleman/molecular-computer.ps">ftp://usc.edu/pub/csinfo/papers/adleman/molecular-computer.ps</a>
Ahí, Adleman prevé computadoras de sopas de ADN corriendo un
millón de veces más rápido que las supercomputadoras más
veloces de hoy en día. También prevé la invención de cientos
de nuevos tipos de computadoras: químicas, catalíticas,
orgánicas, inorgánicas.</p>
<p class="calibre5">Lipton publicó su propio ensayo excepcional en el número
del 28 de abril de 1995 de la revista <em class="calibre9">Science</em>. Extendió el
enorme paralelismo de las computadoras de ADN a otro conjunto
de problemas previamente no resueltos de la lógica Booleana
conocido colectivamente como el Problema de Satisfacción. El
prefacio editorial al Artículo de Lipton le acreditó la creación de una “máquina de búsqueda” capaz de escoger entre
“números astronómicos de respuestas posibles buscando la correcta. Esto involucra buscar en un universo de soluciones
tan grande que derrotaría a cualquier computadora convencional”.</p>
<p class="calibre5">Todas las computadoras son para propósitos especiales. Son
hábiles en la resolución de ciertos tipos de problemas, pero
no todos. Las computadoras electrónicas, que pueden llamarse
más propiamente computadoras secuenciales, son buenas en la
resolución de largos y sutiles problemas, aquellos que requieren un largo número de operaciones, una tras otra. Las
computadoras moleculares, por otra parte, son buenas en la
resolución de problemas amplios y cortos que puedan ser descompuestos en un enorme número de tareas, cada uno requiriendo sólo unos pocos pasos para su resolución.</p>
<p class="calibre5">Todos llevamos una computadora buena para resolver problemas que se ubican en algún punto entre largos y amplios:
nuestro cerebro. Tiene un billón de procesadores trabajando a
un par de cientos de operaciones por segundo. Son menos procesadores que los paralelismos masivos disponibles en la computadora de ADN, y esos procesadores trabajan mucho más lento
que los procesadores de una supercomputadora. Aún así, el cerebro está dotado con una rica conectividad que lo hace excelente en la resolución de un particularmente complejo y desafiante tipo de problemas: cómo vivir en un mundo complicado.</p>
<p class="calibre5">En la mente de Adleman, casi todo lo que nos rodea, desde
sopa hasta nueces, puede ser convertido en una computadora.
“En un extremo, puedes ver todo en el mundo como una computación”, dice. “El universo y sus interacciones pueden pensarse
como algún enorme autómata celular envuelto en su propia
forma peculiar de computación”.</p>
<p class="calibre5">Forzando la conexión entre las computadoras y la vida,
Adleman nos hace repensar el significado de ambos. Evidentemente, nos queda mucho por resolver todavía, pero también
tenemos nuevos medios para hacerlo.</p>
<p class="calibre5">Traducción: Andrés Urtubey.</p>
</div>
</div>
</div>

</div>

</body>
</html>
